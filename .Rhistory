c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
plot(corsi)
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
plot(corsi)
for(i in 1:nrow(img)){
im <- rast(paste0(path, img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corim
}
corcollection <- sprc(corimlist)
cmosaic <- mosaic(corcollection, fun = "median")
plot(cmosaic)
plot(corcollection[[1]])
plot(corcollection[[3]])
plot(corsi)
plot(corimlist)[[1]]
plot(corimlist)[[2]]
plot(corimlist[[2]])
plot(corimlist[[6]])
plot(corimlist[[3]])
for(i in 1:nrow(img)){
im <- rast(paste0(path, img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corsi
}
corcollection <- sprc(corimlist)
cmosaic <- mosaic(corcollection, fun = "median")
plot(cmosaic)
ndvi <- (cmosaic$SR_B4-cmosaic$SR_B3) / (cmosaic$SR_B4 + cmosaic$SR_B3)
plot(ndvi)
ndbi <- (cmosaic$SR_B5-cmosaic$SR_B4) / (cmosaic$SR_B5 + cmosaic$SR_B4)
plot(ndbi)
collection <- sprc(imlist)
mosaic <- mosaic(collection, fun = "median")
tc <- subset(mosaic, 1:3)
RGB(tc) <- c(3,2,1)
plot(tc)
plot(tc, stretch = "lin")
plot(tc, stretch = "hist")
plot(tc, stretch = "lin")
plot(tc)
plotRGB(tc)
plotRGB(tc, stretch = "lin")
plot(tc, stretch = "lin")
plot(tc)
nlayers(tc)
tc
RGB(tc) <- c(1,2,3)
plot(tc)
plot(tc, stretch = "lin")
RGB(tc) <- c(3,2,1)
plot(tc, stretch = "lin")
plot(tc, stretch = "hist")
path
paste0(path, "ndvi", group, ".tif")
paste0(path, "ndvi_", group, ".tif")
groups <- all %>% select(group) %>% distinct()
View(groups)
groups <- as.character(groups)
groups <- all %>% select(group) %>% distinct()
groups <- character(groups)
groups <- all %>% select(group) %>% distinct() %>% as.character()
?as.character
groups <- all %>% select(group) %>% distinct()
groups[]
groups[1]
g <- groups[1]
g <- character(groups)
g <- character(groups, nrow(groups))
g <- as.character(groups, nrow(groups))
g <- as.character(groups[1,])
g <- as.character(groups[,1])
groups <- all %>% select(group) %>% distinct()
groups <- as.character(groups[,1])
gc()
writeRaster(ndvi, filename = paste0(path, "ndvi_", group, ".tif"))
writeRaster(ndbi, filename = paste0(path, "ndbi_", group, ".tif"))
writeRaster(tc, filename = paste0(path, "tc_", group, ".tif"))
dir.create(paste0(path, "/output"))
dir.create(paste0(path,"/temp/"))
dir.remove(paste0(path, "/temp"))
dir.remove(paste0(path, "/temp/"))
unlink(paste0(path, "/temp/"), recursive = TRUE)
doprocessing <- function(group,path,slope,aspect){
i <- 1
img <- all[all$group == group,]
dir.create(paste0(path,"/temp/"))
dir.create(paste0(path, "/output"))
for(i in 1:nrow(img)){
drive_download(img$id[i], path = paste0(path, "/temp/", img$name[i]), overwrite = T)
}
img <- img %>% mutate(monthdif = abs(month-mean(img$month))) %>% arrange(monthdif)
maxext <- getmaxextent(path)
imlist <- as.list(rep(NA, nrow(img)))
corimlist <- as.list(rep(NA, nrow(img)))
i <- 1
for(i in 1:nrow(img)){
im <- rast(paste0(path, img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corsi
}
collection <- sprc(imlist)
corcollection <- sprc(corimlist)
cmosaic <- mosaic(corcollection, fun = "median")
mosaic <- mosaic(collection, fun = "median")
tc <- subset(mosaic, 1:3)
ndvi <- (cmosaic$SR_B4-cmosaic$SR_B3) / (cmosaic$SR_B4 + cmosaic$SR_B3)
ndbi <- (cmosaic$SR_B5-cmosaic$SR_B4) / (cmosaic$SR_B5 + cmosaic$SR_B4)
writeRaster(ndvi, filename = paste0(path, "/output/ndvi_", group, ".tif"))
writeRaster(ndbi, filename = paste0(path, "/output/ndbi_", group, ".tif"))
writeRaster(tc, filename = paste0(path, "/output/tc_", group, ".tif"))
unlink(paste0(path, "/temp/"), recursive = TRUE)
}
path = "/home/chris/Documents/data/landsat/test/"
groups <- all %>% select(group) %>% distinct()
groups <- as.character(groups[,1])
doprocessing(group = groups[10], path = path, slope = slope, aspect = aspect)
img <- img %>% mutate(monthdif = abs(month-mean(img$month))) %>% arrange(monthdif)
maxext <- getmaxextent(path)
l <- list.files(path, full.names= T)
maxext <- getmaxextent(paste0(path, "/temp/"))
imlist <- as.list(rep(NA, nrow(img)))
corimlist <- as.list(rep(NA, nrow(img)))
i <- 1
for(i in 1:nrow(img)){
im <- rast(paste0(path, img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corsi
}
for(i in 1:nrow(img)){
im <- rast(paste0(path, "/temp/", img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corsi
}
for(i in 1:nrow(img)){
im <- rast(paste0(path, "temp/", img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corsi
}
group <- group[10]
img <- all[all$group == group,]
View(img)
View(all)
group <- group[10]
groups <- all %>% select(group) %>% distinct()
groups <- as.character(groups[,1])
group <- group[10]
groups <- all %>% select(group) %>% distinct()
groups <- as.character(groups[,1])
group <- groups[10]
img <- all[all$group == group,]
View(img)
img <- all[all$group == group,]
dir.create(paste0(path,"/temp/"))
for(i in 1:nrow(img)){
drive_download(img$id[i], path = paste0(path, "/temp/", img$name[i]), overwrite = T)
}
img <- img %>% mutate(monthdif = abs(month-mean(img$month))) %>% arrange(monthdif)
maxext <- getmaxextent(paste0(path, "/temp/"))
imlist <- as.list(rep(NA, nrow(img)))
corimlist <- as.list(rep(NA, nrow(img)))
i <- 1
for(i in 1:nrow(img)){
im <- rast(paste0(path, "temp/", img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corsi
}
im <- rast(paste0(path, "temp/", img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
r <- rast(paste0(path, img$name[1]))
r <- rast(paste0(path,"/temp/", img$name[1]))
r <- raster(extend(r, maxext, snap = "out"))
r[] <- 1
dem <- prepdem(r)
slopaspect <- landsat::slopeasp(dem)
slope <- slopaspect$slope
aspect <- slopaspect$aspect
i <- 1
for(i in 1:nrow(img)){
im <- rast(paste0(path, "temp/", img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_swir <- topocorr(x = as(raster(im$SR_B5), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,
sunelev = ele,
sunazimuth = az,
method = "ccorrection")
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_r <- topocorr(x = as(raster(im$SR_B3), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
c_swir <- rast(c_swir)
c_nir <- rast(c_nir)
c_r <- rast(c_r)
corsi <- rast(list(c_swir, c_nir, c_r))
imlist[[i]] <- im
corimlist[[i]] <- corsi
}
im <- rast(paste0(path, "temp/", img$name[i]))
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
im <- im * cloud # removes clouds and cloud shadows
im <- extend(im, maxext, snap = "out")
az <- img[i,]$azimuth
ele <- img[i,]$elevation
c_nir <- topocorr(x = as(raster(im$SR_B4), "SpatialGridDataFrame"),
slope = slope, aspect = aspect,sunelev = ele,sunazimuth = az,
method = "ccorrection")
plot(slope)
plot(asp)
plot(aspect)
plot(im$SR_B5)
im$SR_B1
im <- rast(paste0(path, "temp/", img$name[i]))
plot(im)
im <- subst(x = im, from = 0, to = NA) # removes zeros
cloud <- subst(im$QA_PIXEL, from = c(5440,5504), to = 1, others = NA)
plot(cloud)
plot(im$QA_PIXEL)
library(tidyverse)
library(terra)
library(googledrive)
library(sf)
library(landsat)
library(devtools)
library(elevatr)
library(httr)
load_all()
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
?drivetolocal()
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
library(googledrive)
images <- drive_ls("~/tehri")
library(googledrive)
# load images from drive # do not trust this command and do it many times
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images <- drive_ls("~/tehri")
images$date <- as.POSIXct(substr(images$name, 3,12))
images$month <- format(images$date, "%m")
images$month <- as.numeric(images$month)
images$year <- format(images$date, "%Y")
images$size <- sapply(X = 1:nrow(images),
FUN = function(x){images$drive_resource[[x]]$size})
images$size <- as.numeric(images$size)/1000000
images$ls <- substr(images$name,0,1)
images <- images %>% filter(size >= 1)
yearly_prec <- list.files("/home/chris/Documents/data/climate/prec/", full.names = T)
yearly_tmax <- list.files("/home/chris/Documents/data/climate/tmax/", full.names = T)
View(images)
images <- images %>% filter(size >= 0.3)
library(tidyverse)
library(terra)
library(sf)
library(landsat)
library(devtools)
library(elevatr)
library(httr)
load_all()
images <- images %>% filter(size >= 0.3)
yearly_prec <- list.files("/home/chris/Documents/data/climate/prec/", full.names = T)
yearly_tmax <- list.files("/home/chris/Documents/data/climate/tmax/", full.names = T)
yearly_tmin <- list.files("/home/chris/Documents/data/climate/tmin/", full.names = T)
weekly_ndvi <- list.files("/home/chris/Documents/data/cci/ndvi/", full.names = T)
dam <- read_sf("/home/chris/Documents/data/reservoir_expanded.shp")
seasons <- getSeasons(dam = dam,
yearly_prec = yearly_prec,
yearly_tmax = yearly_tmax,
yearly_tmin = yearly_tmin,
weekly_ndvi = weekly_ndvi)
images <- merge(images,seasons, by = "month")
ffs <- getfirstfullseason(seasons)
ffm <- min(seasons$month[seasons$season == ffs])
firstyear <- as.numeric(min(images$year))
lastyear <- as.numeric(max(images$year))
firstmonth <- min(images$month[images$year == firstyear])
lastmonth <- max(images$month[images$year == lastyear])
year <- as.vector(sapply(firstyear:lastyear, FUN = function(year){years <- rep(year,12)}))
month <- rep(1:12, lastyear-firstyear+1)
seasonindex <- rep(seasons$season, lastyear-firstyear+1)
i <- c(rep(NA, ffm-1), year-firstyear+1)
i <- i[1:length(year)]
indices <- data.frame(year, month, seasonindex, i)
images <- merge(images, indices)
images$date <- substr(images$date, 1,10)
metadata <- clean_metadata(path = "/home/chris/Documents/data/landsat/metadata/") %>%
mutate(azimuth = as.numeric(azimuth), elevation = as.numeric(elevation)) %>%
group_by(date) %>%
summarise(azimuth = mean(azimuth), elevation = mean(elevation))
images <- merge(images,metadata)
drivetolocal(images)
dir.create("/home/chris/Documents/data/landsat/test/temp")
drivetolocal(images, path = "/home/chris/Documents/data/landsat/test/")
path = "/home/chris/Documents/data/landsat/test/"
drivetolocal(images)
list.files(temp)
list.files()
list.files("/home/chris/Documents/data/landsat/test/")
downloaded <- list.files("/home/chris/Documents/data/landsat/test/temp")
View(images)
'%!in%' <- function(x,y)!('%in%'(x,y))
unfinished <- images[images$name %!in% downloaded,]
drivetolocal(unfinished)
